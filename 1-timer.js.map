{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["let userSelectedDate = null;\n\nconst button = document.querySelector('[data-start]');\n\nfunction buttonToggle(anyButton, shouldEnabled) {\n  if (shouldEnabled) {\n    anyButton.removeAttribute('disabled');\n  } else {\n    anyButton.setAttribute('disabled', 'true');\n  }\n}\n\nconst counterData = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  isActive: false,\n};\n\nbuttonToggle(button, false);\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const timeNow = new Date();\n    const selectedDate = new Date(selectedDates[0]);\n    if (!counterData.isActive) {\n      if (timeNow.getTime() > selectedDate.getTime()) {\n        iziToast.warning({\n          title: 'Caution',\n          message: 'Please choose a date in the future',\n          position: 'topRight',\n          timeout: 2000,\n        });\n        if (!button.hasAttribute('disabled')) {\n          buttonToggle(button, false);\n        }\n      } else {\n        buttonToggle(button, true);\n        userSelectedDate = selectedDate.getTime();\n      }\n    } else {\n      iziToast.error({\n        title: 'Wait',\n        message:\n          'Please select a new target, then mark the old timer as completed.',\n        position: 'topCenter',\n        timeout: 4000,\n      });\n      buttonToggle(input.input, false);\n      return;\n    }\n  },\n};\n\nconst input = flatpickr('#datetime-picker', options);\n\nfunction timeUntil(sellectedTime) {\n  const nowData = Date.now();\n  return sellectedTime - nowData;\n}\nconst addLeadingZero = value =>\n  value.toString().length < 2 ? value.toString().padStart(2, '0') : value;\n\nbutton.addEventListener('click', event => {\n  counterData.isActive = true;\n  if (counterData.isActive) {\n    buttonToggle(button, false);\n    buttonToggle(input.input, false);\n  } else {\n    return;\n  }\n  const targetTime = new Date(userSelectedDate);\n  const timerId = setInterval(() => {\n    const time = timeUntil(userSelectedDate);\n    const { seconds, minutes, hours, days } = convertMs(time);\n    if (!(time <= 0)) {\n      counterData.days.textContent = addLeadingZero(days);\n      counterData.hours.textContent = addLeadingZero(hours);\n      counterData.minutes.textContent = addLeadingZero(minutes);\n      counterData.seconds.textContent = addLeadingZero(seconds);\n    } else {\n      clearInterval(timerId);\n      counterData.seconds.textContent = '00';\n      buttonToggle(input.input, true);\n      counterData.isActive = false;\n      iziToast.success({\n        title: 'Time is up!',\n        message: `It's now ${targetTime}`,\n        position: 'center',\n        timeout: 2000,\n      });\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["userSelectedDate","button","buttonToggle","anyButton","shouldEnabled","counterData","options","selectedDates","timeNow","selectedDate","iziToast","input","flatpickr","timeUntil","sellectedTime","nowData","addLeadingZero","value","event","targetTime","timerId","time","seconds","minutes","hours","days","convertMs","ms"],"mappings":"+IAAA,IAAIA,EAAmB,KAEvB,MAAMC,EAAS,SAAS,cAAc,cAAc,EAEpD,SAASC,EAAaC,EAAWC,EAAe,CAC1CA,EACFD,EAAU,gBAAgB,UAAU,EAEpCA,EAAU,aAAa,WAAY,MAAM,CAE7C,CAEA,MAAME,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,SAAU,EACZ,EAEAH,EAAaD,EAAQ,EAAK,EAO1B,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAU,IAAI,KACdC,EAAe,IAAI,KAAKF,EAAc,CAAC,CAAC,EAC9C,GAAI,CAACF,EAAY,SACXG,EAAQ,QAAO,EAAKC,EAAa,QAAO,GAC1CC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,WACV,QAAS,GACnB,CAAS,EACIT,EAAO,aAAa,UAAU,GACjCC,EAAaD,EAAQ,EAAK,IAG5BC,EAAaD,EAAQ,EAAI,EACzBD,EAAmBS,EAAa,eAE7B,CACLC,EAAS,MAAM,CACb,MAAO,OACP,QACE,oEACF,SAAU,YACV,QAAS,GACjB,CAAO,EACDR,EAAaS,EAAM,MAAO,EAAK,EAC/B,MACD,CACF,CACH,EAEMA,EAAQC,EAAU,mBAAoBN,CAAO,EAEnD,SAASO,EAAUC,EAAe,CAChC,MAAMC,EAAU,KAAK,MACrB,OAAOD,EAAgBC,CACzB,CACA,MAAMC,EAAiBC,GACrBA,EAAM,SAAQ,EAAG,OAAS,EAAIA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAAIA,EAEpEhB,EAAO,iBAAiB,QAASiB,GAAS,CAExC,GADAb,EAAY,SAAW,GACnBA,EAAY,SACdH,EAAaD,EAAQ,EAAK,EAC1BC,EAAaS,EAAM,MAAO,EAAK,MAE/B,QAEF,MAAMQ,EAAa,IAAI,KAAKnB,CAAgB,EACtCoB,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAOR,EAAUb,CAAgB,EACjC,CAAE,QAAAsB,EAAS,QAAAC,EAAS,MAAAC,EAAO,KAAAC,GAASC,EAAUL,CAAI,EAClDA,GAAQ,GAMZ,cAAcD,CAAO,EACrBf,EAAY,QAAQ,YAAc,KAClCH,EAAaS,EAAM,MAAO,EAAI,EAC9BN,EAAY,SAAW,GACvBK,EAAS,QAAQ,CACf,MAAO,cACP,QAAS,YAAYS,CAAU,GAC/B,SAAU,SACV,QAAS,GACjB,CAAO,IAdDd,EAAY,KAAK,YAAcW,EAAeS,CAAI,EAClDpB,EAAY,MAAM,YAAcW,EAAeQ,CAAK,EACpDnB,EAAY,QAAQ,YAAcW,EAAeO,CAAO,EACxDlB,EAAY,QAAQ,YAAcW,EAAeM,CAAO,EAa3D,EAAE,GAAI,CACT,CAAC,EAED,SAASI,EAAUC,EAAI,CAQrB,MAAMF,EAAO,KAAK,MAAME,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAF,EAAM,MAAAD,EAAO,QAAAD,EAAS,QAAAD,CAAO,CACxC"}